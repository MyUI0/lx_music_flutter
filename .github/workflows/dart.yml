name: Flutter iOS Build (Unsigned IPA)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:  # 添加手动触发工作流的配置

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      # 设置Dart环境，有助于后续获取Flutter版本相关操作
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
         

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Get current working directory
        id: get_dir
        run: |
          WORKING_DIR=$(pwd)
          echo "WORKING_DIR=$WORKING_DIR" >> $GITHUB_ENV
          # 上面这行命令是将工作目录变量写入到环境文件中，供后续步骤使用
        shell: /bin/bash -e {0}
        env:
          DART_HOME: /Users/runner/hostedtoolcache/dart/3.5.4/arm64
          PUB_CACHE: /Users/runner/.pub-cache
          FLUTTER_ROOT: /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64
          MD_APPLE_SDK_ROOT: /Applications/Xcode_16.1.app

      - name: Install dependencies
        run: flutter pub get
        working-directory: ${{ env.WORKING_DIR }}
   

      - name: Build iOS IPA (Unsigned)
        run: flutter build ios --release --no-tree-shake-icons --no-codesign
        working-directory: ${{ env.WORKING_DIR }}


      - name: Package.app folder into IPA format
        run: |
          cd ${{ env.WORKING_DIR }}
          mkdir -p Payload
          mv Runner.app Payload/
          zip -r Runner.ipa Payload
          rm -rf Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS_Build_Artifact
          path: ${{ env.WORKING_DIR }}/Runner.ipa

